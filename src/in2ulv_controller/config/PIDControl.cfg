#!/usr/bin/env python
PACKAGE = "in2ulv_controller"  # 替换为你的包名

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
# 左轮惯量更小，所以左轮的PID参数需要更小
gen.add("left_vel_kp", double_t, 0, "Left vel kp", 2, 0, 5)
gen.add("left_vel_ki", double_t, 0, "Left vel ki", 0, 0, 1)
gen.add("left_vel_kd", double_t, 0, "Left vel kd", 0, 0, 1)
gen.add("left_vel_ffg", double_t, 0, "Left vel ffg", 0, 0, 5) # 前馈增益
gen.add("left_vel_cdf", double_t, 0, "Left vel cdf", 0, 0, 1) # 微分滤波
gen.add("left_vel_kaw", double_t, 0, "Left vel kaw", 0, 0, 1) # 后向积分抗饱和
gen.add("left_vel_deadband", double_t, 0, "Left vel deadband", 0.01, 0, 1) # 死区

gen.add("right_vel_kp", double_t, 0, "Right vel kp", 2, 0, 5)
gen.add("right_vel_ki", double_t, 0, "Right vel ki", 0, 0, 1)
gen.add("right_vel_kd", double_t, 0, "Right vel kd", 0, 0, 1)
gen.add("right_vel_ffg", double_t, 0, "Right vel ffg", 0, 0, 5) # 前馈增益
gen.add("right_vel_cdf", double_t, 0, "Right vel cdf", 0, 0, 1) # 微分滤波
gen.add("right_vel_kaw", double_t, 0, "Right vel kaw", 0, 0, 1) # 后向积分抗饱和
gen.add("right_vel_deadband", double_t, 0, "Right vel deadband", 0.01, 0, 1) # 死区

gen.add("back_ang_kp", double_t, 0, "Back ang kp", 0.02, 0, 0.5)
gen.add("back_ang_ki", double_t, 0, "Back ang ki", 0.03, 0, 0.5)
gen.add("back_ang_kd", double_t, 0, "Back ang kd", 0.0, 0, 1)
gen.add("back_ang_ffg", double_t, 0, "Back ang ffg", 0.0, 0, 5) # 前馈增益
gen.add("back_ang_cdf", double_t, 0, "Back ang cdf", 0.0, 0, 1) # 微分滤波
gen.add("back_ang_kaw", double_t, 0, "Back ang kaw", 0.02, 0, 1) # 后向积分抗饱和
gen.add("back_ang_deadband", double_t, 0, "Back ang deadband", 0.045, 0, 1) # 死区

exit(gen.generate(PACKAGE, "in2ulv_base", "PIDControl"))  # 替换为你的节点名

